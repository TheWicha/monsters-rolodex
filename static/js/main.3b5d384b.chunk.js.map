{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","index","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","search","target","value","state","loading","a","fetch","res","json","data","getData","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAGaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCJLC,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,EAASU,GAAV,OACZ,cAAC,EAAD,CAAuBV,QAASA,GAArBA,EAAQI,UCDZO,G,MAJG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OAAO,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCoDtEG,E,kDAlDb,aAAe,IAAD,8BACZ,gBAyBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SAxBjC,EAAKC,MAAQ,CACXd,SAAU,GACVW,OAAQ,GACRI,SAAS,GANC,E,qDAUd,WAAqB,IAAD,QAGL,uCAAG,8BAAAC,EAAA,+EAEMC,MAJZ,8CAEM,cAENC,EAFM,gBAGOA,EAAIC,OAHX,OAGNC,EAHM,OAIZ,EAAKV,SAAS,CAAEK,SAAS,EAAOf,SAAUoB,IAJ9B,kDAMZ,EAAKV,SAAS,CAAEK,SAAS,IANb,0DAAH,qDAUbM,K,oBAOF,WAAU,IAAD,EACsBC,KAAKR,MAA1Bd,EADD,EACCA,SAAUW,EADX,EACWA,OACZY,EAAmBvB,EAASwB,QAAO,SAAChC,GAAD,OAAaA,EAAQK,KAAK4B,cAAcC,SAASf,EAAOc,kBAEjG,OACE,qBAAKhC,UAAU,MAAf,SACG6B,KAAKR,MAAMC,QACV,oDAEA,qCACE,kDACA,cAAC,EAAD,CAAWX,YAAa,SAAUC,aAAciB,KAAKjB,eACrD,cAAC,EAAD,CAAUL,SAAUuB,a,GA3CdI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b5d384b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = ({ monster }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = ({ monsters }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster, index) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />;\r\n};\r\n\r\nexport default SearchBox;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      search: \"\",\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    let url = \"https://jsonplaceholder.typicode.com/users\";\n\n    const getData = async () => {\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        this.setState({ loading: false, monsters: data });\n      } catch (e) {\n        this.setState({ loading: true });\n      }\n    };\n\n    getData();\n  }\n\n  handleChange = (e) => {\n    this.setState({ search: e.target.value });\n  };\n\n  render() {\n    const { monsters, search } = this.state;\n    const filteredMonsters = monsters.filter((monster) => monster.name.toLowerCase().includes(search.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        {this.state.loading ? (\n          <div>≈Åadowanie...</div>\n        ) : (\n          <>\n            <h1>Monsters Rolodex</h1>\n            <SearchBox placeholder={\"search\"} handleChange={this.handleChange} />\n            <CardList monsters={filteredMonsters} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}